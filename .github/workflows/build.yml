# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build

on:
  push:
    branches: [ dev ]

defaults:
  run:
    shell: bash

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python: [ "3.11" ]
        include:
          - os: windows-2019
            python: "3.7"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build
        run: |
          bash semver.sh &&
          pyinstaller -y decoder.spec

      - name: Dist rename
        run: |
          case ${{ matrix.os }} in
            ubuntu-latest)
              mv dist/SatsDecoder dist/SatsDecoder-linux
              ;;
            windows-2019)
              mv dist/SatsDecoder.exe dist/SatsDecoder-win7.exe
              ;;
          esac

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SatsDecoder-${{ matrix.os }}
          path: dist/*

  nightly-release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/download-artifact@v4

      - name: Collect
        run: |
          mkdir out &&
          cp -r SatsDecoder-*/* out/

      - name: Cleanup
        continue-on-error: true
        run: gh release delete nightly -R ${{ github.repository }} --cleanup-tag -y

      - name: Create nightly release
        run: gh release create nightly -R ${{ github.repository }} -t nightly --target dev --generate-notes --prerelease out/*
